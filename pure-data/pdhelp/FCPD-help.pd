#N canvas 843 43 575 930 12;
#X obj 10 1740 helplink fc_process;
#X obj 10 150 helplink fc_recompute;
#X text 150 150 ask FreeCAD to recompute ActiveDocument;
#X text 10 120 BASE;
#X obj 0 0 cnv 15 550 50 empty empty FCPD 20 12 0 16 #e0e0e0 #404040 0;
#X obj 10 1550 helplink part;
#X obj 10 1580 helplink draft;
#X text 10 1520 WORKBENCHES;
#X text 120 6 a framework to connect FreeCAD and PureData \; (c)2020-2025 @FlachyJoe and contributors;
#X obj 10 610 helplink XYZvector;
#X text 150 610 Create a vector from its X \, Y \, Z coords;
#X obj 10 640 helplink vectorXYZ;
#X text 150 640 Retrieve X \, Y \, Z coords of a vector;
#X obj 10 670 helplink isVector;
#X text 150 670 Bang left or right if input is a vector or not;
#X obj 10 990 helplink placementPosRot;
#X text 150 990 Split a placement in position (vector) and rotation;
#X obj 10 1020 helplink setPlacementPos;
#X text 150 1020 Move a placement to the specified position;
#X obj 10 1050 helplink setPlacementRot;
#X text 150 1050 Rotate a placement to the specified rotation;
#X obj 10 950 helplink isRotation;
#X obj 10 1080 helplink translatePlacement;
#X text 150 1080 Add the specified vector to the placement position;
#X obj 10 1110 helplink rotatePlacement;
#X text 150 1110 Combine the specified rotation to the placement;
#X text 150 950 Bang left or right if input is a rotation or not;
#X text 10 580 VECTOR & ROTATION & PLACEMENT;
#X obj 10 890 helplink YPRrotation;
#X text 150 890 Create a rotation from Yaw Pich Roll values;
#X obj 10 920 helplink rotationYPR;
#X text 150 920 Retrieve Yaw Pitch Roll of a rotation;
#X obj 10 700 helplink vectorAdd;
#X obj 10 730 helplink vectorMinus;
#X obj 10 760 helplink vectorMult;
#X text 150 760 Multiply a vector by a scalar;
#X text 150 730 Subtract a vector to another;
#X text 150 700 Add a vector to another;
#X obj 10 780 helplink Ox;
#X text 150 790 vector (1 \, 0 \, 0);
#X obj 10 810 helplink Oy;
#X obj 10 840 helplink Oz;
#X text 150 850 vector (0 \, 0 \, 1);
#X text 150 820 vector (0 \, 1 \, 0);
#X text 10 260 SCALAR;
#X obj 10 280 helplink pi;
#X obj 10 320 helplink -pi;
#X obj 10 350 helplink 0.5pi;
#X obj 10 380 helplink -0.5pi;
#X obj 10 410 helplink neg;
#X text 150 410 -x;
#X text 10 450 LIST;
#X obj 11 480 helplink fcList;
#X text 150 480 convert a PD list in a FC list;
#X obj 10 510 helplink castList;
#X text 150 510 convert a FC list \, vector or rotation to a PD list;
#X obj 10 540 helplink isList;
#X text 150 540 bang at left or right if input is a FC list or not;
#X text 10 1150 OBJECT;
#X obj 10 1420 helplink fc_getObjectProperty;
#X obj 10 1450 helplink fc_setObjectProperty;
#X text 160 1420 .;
#X text 160 1450 .;
#X obj 10 1180 helplink fc_addObject;
#X text 160 1180 create an object in the ActiveDocument and return it;
#X obj 10 1210 helplink fc_byLabel;
#X text 160 1210 retrieve an object in the ActiveDocument by its label;
#X obj 10 1240 helplink fc_clicknselect;
#X text 160 1240 click on a FC object and its ref is return to PD;
#X obj 10 1270 helplink fc_copy;
#X text 160 1270 duplicate the given object \, optional its dependencies;
#X obj 10 1300 helplink fc_delete;
#X text 160 1300 delete the given object;
#X obj 10 1330 helplink fc_isObject;
#X text 160 1330 bang left/right if data is object/or not;
#X obj 10 1360 helplink fc_isType;
#X text 160 1360 bang left/right if object is of the given type/or not;
#X obj 10 1390 helplink fc_link;
#X text 160 1390 create a link of the given object in the ActiveDocument;
#X obj 10 1480 helplink fc_object;
#X text 160 1480 create \, modify \, delete an object;
#X text 10 190 DATA FLOW;
#X obj 11 220 helplink fc_controler;
#X text 150 220 create a (bidirectional) data tunnel to FC;
#X text 10 1650 INTERNAL;
#X obj 10 1680 helplink fc_client;
#X obj 10 1710 helplink fc_giveme;
#X text 150 1740 send raw message to FreeCAD server;
#X text 150 1710 ask for a PD binder to a python method;
#X text 150 1680 communicate with FC python server;
#X obj 10 1770 helplink commandline;
#X text 150 1770 a place for the user to type text;
#X obj 10 1610 helplink shape;
#X text 27 53 Abstractions named "fc_*" are asynchronous. Data are sent to FC and the left-most outlet bang when the return values on other outlets are ready. The others are full PD and compute during a control tick.;
